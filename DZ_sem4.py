# Задача 22: Даны два неупорядоченных набора целых чисел 
# (может быть, с повторениями). 
# Выдать без повторений в порядке возрастания все те числа, 
# которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n — кол-во элементов первого множества. 
# m — кол-во элементов второго множества. 
# Затем пользователь вводит сами элементы множеств.

# def total_num(n, m, set1, set2):
#     total = set1.intersection(set2)
#     result = []
#     for elem in total:
#         if elem not in result:
#             result.append(elem)
#     return result

# try:
#     n = int(input("Введите количество элементов первого множества n:")) 
#     m = int(input("Введите количество элементов второго множества m:")) 
#     set1 = set()
#     set2 = set()
#     print("Введите элементы первого множества")
#     for i in range(n):
#         set1.add(int(input()))
#     print("Введите элементы второго множества")
#     for i in range(m):
#         set2.add(int(input()))
#     print(set1)
#     print(set2)
#     print(total_num(n, m, set1, set2))
# except:
#     print("Ввели неверные данные")

    

# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. 
# Она растёт на круглой грядке, причём кусты высажены только по окружности. 
# Таким образом, у каждого куста есть ровно два соседних. 
# Всего на грядке растёт N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на 
# них выросло различное число ягод — на i-ом кусте выросло a[i] ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники. 
# Эта система состоит из управляющего модуля и нескольких собирающих модулей. 
# Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, 
# собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, 
# которое может собрать за один заход собирающий модуль, 
# находясь перед некоторым кустом заданной во входном списке урожайности грядки.   

# def max_berry(n):
#     result = []
#     i = 0 
#     sum = 0
#     while (i < n):
#         if(i == n-1):
#             sum = k[i] + k[i-1] + k[0]
#         else:
#             sum = k[i] + k[i-1] + k[i+1]
#         result.append(sum)
#         i += 1
#     return max(result)
        
# import random
# n = int(input("Введите количество кустов "))
# k = list(random.randint(1, 5) for i in range(n))
# print(k)
# print(max_berry(n))


