# Задача 10: На столе лежат n монеток. Некоторые из них лежат вверх решкой, 
# а некоторые – гербом. Определите минимальное число монеток, которые нужно перевернуть, 
# чтобы все монетки были повернуты вверх одной и той же стороной. 
# Выведите минимальное количество монет, которые нужно перевернуть


# import random
# def find_eagle_tails(count_coins):
#     eagle = 0
#     tails = 0
#     for i in range(count_coins):
#         coins = random.randrange(0, 2)
#         print(coins, end = " " )
#         if coins > 0:
#             eagle += 1
#         else:
#             tails += 1
#     print()
#     if eagle > tails:
#         return(f'Нужно перевернуть {tails} монет')
#     else:
#         return(f'Нужно перевернуть {eagle} монет')
    

# coins = int(input("Введите количество монет "))
# print(find_eagle_tails(coins))


# Задача 12: Петя и Катя – брат и сестра. 
# Петя – студент, а Катя – школьница. 
# Петя помогает Кате по математике. 
# Он задумывает два натуральных числа X и Y (X,Y≤1000), 
# а Катя должна их отгадать. Для этого Петя делает две подсказки. 
# Он называет сумму этих чисел S и их произведение P. 
# Помогите Кате отгадать задуманные Петей числа.


# def sum_pr_numbers(n):
#     count = 0
#     for x in range(s):
#         y = s - x
#         if x + y == s and x * y == p:
#             count += 1
#             break
#     if count == 0:
#        print("Ввели некоректные данные ")
#     return(f'заданные числа {x} и {y}')
   
        
# s = int(input("Введите сумму чисел "))
# p = int(input("Введите произведение чисел "))
# print(sum_pr_numbers(s))
        

# Задача 14: Требуется вывести все целые степени двойки 
# (т.е. числа вида 2^k), не превосходящие числа N

# n = int(input("Введите число N "))
# k = 1
# result = 1
# while result < n:
#     print(result, end=' ')
#     result = 2**k
#     k += 1
    
    